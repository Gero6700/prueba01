namespace Senator.As400.Cloud.Sync.Infrastructure.Providers {
    public interface IAvailabilitySynchronizerApiClient {
        Task<HttpResponseMessage> CreateCancellationPolicy(CancellationPolicyDto cancellationPolicy);
        Task<HttpResponseMessage> UpdateCancellationPolicy(CancellationPolicyDto cancellationPolicy);
        Task<HttpResponseMessage> CreateCommission(CommissionDto commission);
        Task<HttpResponseMessage> UpdateCommission(CommissionDto commission);
        Task<HttpResponseMessage> DeleteCommission(string code);
        Task<HttpResponseMessage> CreateContractHeader(ContractHeaderDto contractHeader);
        Task<HttpResponseMessage> UpdateContractHeader(ContractHeaderDto contractHeader);
        Task<HttpResponseMessage> CreateExtra(ExtraDto extra);
        Task<HttpResponseMessage> UpdateExtra(ExtraDto extra);
        Task<HttpResponseMessage> CreateHotel(HotelDto hotel);
        Task<HttpResponseMessage> UpdateHotel(HotelDto hotel);
        Task<HttpResponseMessage> PushHotelRoomConfiguration(HotelRoomConfigurationDto hotelRoomConfiguration);
        Task<HttpResponseMessage> PushHotelSeasons(HotelSeasonsDto hotelSeasons);
        Task<HttpResponseMessage> CreateIntegration(IntegrationDto integration);
        Task<HttpResponseMessage> UpdateIntegration(IntegrationDto integration);
        Task<HttpResponseMessage> DeleteIntegration(string code);
        Task<HttpResponseMessage> CreateIntegrationClientType(IntegrationClientTypeDto integrationClientType);
        Task<HttpResponseMessage> UpdateIntegrationClientType(IntegrationClientTypeDto integrationClientType);
        Task<HttpResponseMessage> DeleteIntegrationClientType(string code);
        Task<HttpResponseMessage> CreateIntegrationContract(IntegrationContractDto integrationContract);
        Task<HttpResponseMessage> UpdateIntegrationContract(IntegrationContractDto integrationContract);
        Task<HttpResponseMessage> CreateInventory(InventoryDto inventory);
        Task<HttpResponseMessage> UpdateInventory(InventoryDto inventory);
        Task<HttpResponseMessage> CreateMarket(MarketDto market);
        Task<HttpResponseMessage> CreateMeal(MealDto meal);
        Task<HttpResponseMessage> CreateMinimumStay(MinimumStayDto minimumStay);
        Task<HttpResponseMessage> UpdateMinimumStay(MinimumStayDto minimumStay);
        Task<HttpResponseMessage> DeleteMinimunStay(string code);
        Task<HttpResponseMessage> CreateOccupancyRate(OccupancyRateDto occupancyRate);
        Task<HttpResponseMessage> UpdateOccupancyRate(OccupancyRateDto occupancyRate);
        Task<HttpResponseMessage> PushOccupancyScore(OccupancyScoreDto occupancyScore);
        Task<HttpResponseMessage> CreateOfferSupplement(OfferSupplementDto offerSupplement);
        Task<HttpResponseMessage> UpdateOfferSupplement(OfferSupplementDto offerSupplement);
        Task<HttpResponseMessage> CreateOfferSupplementConfigurationPax(OfferSupplementConfigurationPaxDto offerSupplementConfigurationPax);
        Task<HttpResponseMessage> UpdateOfferSupplementConfigurationPax(OfferSupplementConfigurationPaxDto offerSupplementConfigurationPax);
        Task<HttpResponseMessage> DeleteOfferSupplementConfigurationPax(string code);
        Task<HttpResponseMessage> CreateOfferSupplementGroup(OfferSupplementGroupDto offerSupplementGroup);
        Task<HttpResponseMessage> UpdateOfferSupplementGroup(OfferSupplementGroupDto offerSupplementGroup);
        Task<HttpResponseMessage> CreateOfferSupplementGroupRelation(OfferSupplementGroupRelationDto offerSupplementGroupRelation);
        Task<HttpResponseMessage> DeleteOfferSupplementGroupRelation(OfferSupplementGroupRelationDto offerSupplementGroupRelation);
        Task<HttpResponseMessage> CreatePeriodPricing(PeriodPricingDto periodPricing);
        Task<HttpResponseMessage> UpdatePeriodPricing(PeriodPricingDto periodPricing);
        Task<HttpResponseMessage> CreatePeriodPricingPax(PeriodPricingPaxDto periodPricingPax);
        Task<HttpResponseMessage> UpdatePeriodPricingPax(PeriodPricingPaxDto periodPricingPax);
        Task<HttpResponseMessage> DeletePeriodPricingPax(string code);
        Task<HttpResponseMessage> CreateRoom(RoomDto room);
    }
}
